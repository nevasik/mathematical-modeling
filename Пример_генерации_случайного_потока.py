import numpy as np
import matplotlib.pyplot as plt

def generate_arrival_rate(t_start, t_end, min_rate=50, max_rate=200):
    """
    Генерация случайной интенсивности потока людей по времени.

    Формула:
    λ(t) = min_rate + (max_rate - min_rate) * U[0,1]
    где U[0,1] - равномерное распределение

    Параметры:
    t_start, t_end - временной интервал (часы)
    min_rate - минимальная интенсивность (чел/час)
    max_rate - максимальная интенсивность (чел/час)
    """
    time_intervals = np.linspace(t_start, t_end, 100)
    rates = min_rate + (max_rate - min_rate) * np.random.rand(100)
    return time_intervals, rates

# Пример вызова для интервала 8:00-12:00
time_points, arrival_rates = generate_arrival_rate(
    t_start=8.0,  # 8:00 в десятичном формате
    t_end=12.0,    # 12:00
    min_rate=100,
    max_rate=400
)

# Визуализация
plt.figure(figsize=(10, 4))
plt.plot(time_points, arrival_rates, 'b-', linewidth=2)
plt.title("Случайная интенсивность потока людей\nλ(t) = 100 + 300·U[0,1]")
plt.xlabel("Время (часы)", fontsize=12)
plt.ylabel("Людей в час", fontsize=12)
plt.grid(True, alpha=0.3)
plt.xticks(np.arange(8, 12.5, 0.5))
plt.yticks(np.arange(100, 450, 50))
plt.show()


# Что здесь происходит?
# Аргументы функции:

# t_start и t_end – начало и конец временного интервала (в часах).
# Например, t_start = 8.0, t_end = 12.0 обозначает период с 8:00 до 12:00.
# min_rate и max_rate – нижняя и верхняя границы интенсивности потока людей (в единицах «чел/час», т.е. сколько людей в среднем могут прийти за один час). По умолчанию – от 50 до 200, но при вызове функции можно указать свои значения.
# time_intervals = np.linspace(t_start, t_end, 100)
#
# Функция np.linspace создаёт равномерно распределённые точки между t_start и t_end.
# Параметр 100 означает, что всего будет сгенерировано 100 точек (то есть получится 100 моментов времени).
# В итоге time_intervals – это массив вида [8.0, 8.04, 8.08, ..., 12.0].
# rates = min_rate + (max_rate - min_rate) * np.random.rand(100)
#
# np.random.rand(100) генерирует 100 случайных чисел.
# Каждое такое число умножается на (max_rate - min_rate) и к результату прибавляется min_rate.
# Таким образом, для каждой из 100 точек времени получится случайная интенсивность λ(t), равномерно распределённая между min_rate и max_rate.
# Геометрически это означает, что для каждого времени выбирается некоторая интенсивность в рамках заданных границ.
# Возврат результатов:
#
# Функция возвращает time_intervals (массив с точками по оси времени) и rates (массив со случайными значениями интенсивности на каждом из 100 отрезков).
# Назначение функции
# Таким образом, generate_arrival_rate даёт возможность получить кусочно-состоящую (из 100 точек) функцию λ(t), где λ(t) – интенсивность прихода людей (чел/час).
# Форма «случайная» в том плане, что каждая точка генерируется независимо из равномерного распределения.